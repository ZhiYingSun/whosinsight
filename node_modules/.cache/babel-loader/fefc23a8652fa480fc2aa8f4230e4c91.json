{"ast":null,"code":"var _jsxFileName = \"/Users/sophysun/Documents/GitHub/whosinsight/src/comps/UploadForm.js\";\nimport React, { useState } from 'react';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const type = ['iamge/png', 'image/jpeg', 'image/jpg']; // access file the user has selected\n\n  const changeHandler = e => {\n    let selected = e.target.files[0]; // make sure a file has been slected and is of allowed type\n\n    if (selected && type.include(selected.type)) {\n      setFile(selected);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["/Users/sophysun/Documents/GitHub/whosinsight/src/comps/UploadForm.js"],"names":["React","useState","UploadForm","file","setFile","type","changeHandler","e","selected","target","files","include"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBH,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAMI,IAAI,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CAAb,CAHqB,CAKrB;;AACA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzB,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf,CADyB,CAGzB;;AACA,QAAIF,QAAQ,IAAIH,IAAI,CAACM,OAAL,CAAaH,QAAQ,CAACH,IAAtB,CAAhB,EAA6C;AACzCD,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH;AACJ,GAPD;;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGF,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CArBD;;AAuBA,eAAeJ,UAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst UploadForm = () => {\n\n    const [file, setFile]= useState(null);\n    const type = ['iamge/png', 'image/jpeg', 'image/jpg']\n\n    // access file the user has selected\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n\n        // make sure a file has been slected and is of allowed type\n        if (selected && type.include(selected.type)) {\n            setFile(selected);\n        }\n    }\n\n    return (\n        <form>\n            <input type=\"file\" onChange={ changeHandler } />\n        </form>\n    )   \n \n}\n\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}